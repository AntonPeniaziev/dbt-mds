

============================== 2023-03-10 09:43:00.169436 | 6b1e64f3-083f-4b24-a0b9-4921cbb95b87 ==============================
[0m09:43:00.169436 [info ] [MainThread]: Running with dbt=1.4.4
[0m09:43:00.170825 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'skip_profile_setup': False, 'which': 'init', 'indirect_selection': 'eager'}
[0m09:43:00.171052 [debug] [MainThread]: Tracking: tracking
[0m09:43:00.209201 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106b810a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106ba70d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106bb7640>]}
[0m09:43:08.100536 [debug] [MainThread]: Starter project path: /Users/user/Library/Caches/pypoetry/virtualenvs/songs-dbt-0iH4VeN6-py3.9/lib/python3.9/site-packages/dbt/include/starter_project
[0m09:43:14.699961 [info ] [MainThread]: No sample profile found for duckdb.
[0m09:43:14.700939 [info ] [MainThread]: 
Your new dbt project "songs" was created!

For more information on how to configure the profiles.yml file,
please consult the dbt documentation here:

  https://docs.getdbt.com/docs/configure-your-profile

One more thing:

Need help? Don't hesitate to reach out to us via GitHub issues or on Slack:

  https://community.getdbt.com/

Happy modeling!

[0m09:43:14.701688 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106bb7fd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106bb7d90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106bb7940>]}
[0m09:43:14.702274 [debug] [MainThread]: Flushing usage events


============================== 2023-03-10 13:32:53.530849 | cce6443f-82d9-4de0-ba78-e46fbaadd32b ==============================
[0m13:32:53.530849 [info ] [MainThread]: Running with dbt=1.4.4
[0m13:32:53.532846 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'project_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'profile': 'local', 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m13:32:53.533055 [debug] [MainThread]: Tracking: tracking
[0m13:32:53.566793 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b48a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b720a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b836d0>]}
[0m13:32:53.780134 [debug] [MainThread]: Executing "git --help"
[0m13:32:53.796194 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m13:32:53.796926 [debug] [MainThread]: STDERR: "b''"
[0m13:32:53.812068 [debug] [MainThread]: Acquiring new duckdb connection 'debug'
[0m13:32:53.813153 [debug] [MainThread]: Using duckdb connection "debug"
[0m13:32:53.813447 [debug] [MainThread]: On debug: select 1 as id
[0m13:32:53.813689 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:32:53.827308 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b5b340>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b83970>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b83820>]}
[0m13:32:53.827900 [debug] [MainThread]: Flushing usage events
[0m13:32:54.521584 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2023-03-10 13:34:06.391244 | ba4ba6a5-1ec0-4dc1-a18b-2bec6bd09a94 ==============================
[0m13:34:06.391244 [info ] [MainThread]: Running with dbt=1.4.4
[0m13:34:06.392563 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'project_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'profile': 'local', 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m13:34:06.392807 [debug] [MainThread]: Tracking: tracking
[0m13:34:06.421263 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108eb7a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108ee20a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108ef36d0>]}
[0m13:34:06.507567 [debug] [MainThread]: Executing "git --help"
[0m13:34:06.523894 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m13:34:06.524774 [debug] [MainThread]: STDERR: "b''"
[0m13:34:06.534021 [debug] [MainThread]: Acquiring new duckdb connection 'debug'
[0m13:34:06.534757 [debug] [MainThread]: Using duckdb connection "debug"
[0m13:34:06.535772 [debug] [MainThread]: On debug: select 1 as id
[0m13:34:06.536340 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:34:06.541549 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108fc9dc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108fbe9a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108fbe190>]}
[0m13:34:06.542323 [debug] [MainThread]: Flushing usage events
[0m13:34:07.139860 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2023-03-10 13:38:19.602025 | 7bced6db-79c6-4dcf-bee2-73bfbd83e4e0 ==============================
[0m13:38:19.602025 [info ] [MainThread]: Running with dbt=1.4.4
[0m13:38:19.604139 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'project_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'profile': 'local', 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m13:38:19.604509 [debug] [MainThread]: Tracking: tracking
[0m13:38:19.647572 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e39a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e630a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e746d0>]}
[0m13:38:19.897865 [debug] [MainThread]: Executing "git --help"
[0m13:38:19.929979 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m13:38:19.930634 [debug] [MainThread]: STDERR: "b''"
[0m13:38:19.945192 [debug] [MainThread]: Acquiring new duckdb connection 'debug'
[0m13:38:19.946937 [debug] [MainThread]: Using duckdb connection "debug"
[0m13:38:19.947682 [debug] [MainThread]: On debug: select 1 as id
[0m13:38:19.948246 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:38:19.963815 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f4bc10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f409a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f40190>]}
[0m13:38:19.964843 [debug] [MainThread]: Flushing usage events
[0m13:38:20.642996 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2023-03-10 14:03:52.393823 | 670a49ea-cca0-49e7-a38f-2897abe76125 ==============================
[0m14:03:52.393823 [info ] [MainThread]: Running with dbt=1.4.4
[0m14:03:52.395687 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'project_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'profile': 'local', 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m14:03:52.395993 [debug] [MainThread]: Tracking: tracking
[0m14:03:52.431120 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a11f850>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a147100>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a158610>]}
[0m14:03:52.643974 [debug] [MainThread]: Executing "git --help"
[0m14:03:52.659560 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m14:03:52.660759 [debug] [MainThread]: STDERR: "b''"
[0m14:03:52.672583 [debug] [MainThread]: Acquiring new duckdb connection 'debug'
[0m14:03:52.673506 [debug] [MainThread]: Using duckdb connection "debug"
[0m14:03:52.673841 [debug] [MainThread]: On debug: select 1 as id
[0m14:03:52.674193 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:03:52.684541 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a2301c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a2247f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a224910>]}
[0m14:03:52.685679 [debug] [MainThread]: Flushing usage events
[0m14:03:53.483244 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2023-03-10 14:04:16.236537 | 87883224-ef2d-45bd-8cfb-4e3a1de39845 ==============================
[0m14:04:16.236537 [info ] [MainThread]: Running with dbt=1.4.4
[0m14:04:16.237868 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'project_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'profile': 'local', 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m14:04:16.238055 [debug] [MainThread]: Tracking: tracking
[0m14:04:16.272585 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110686910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1106b0100>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1106c1700>]}
[0m14:04:16.358475 [debug] [MainThread]: Executing "git --help"
[0m14:04:16.370695 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m14:04:16.371439 [debug] [MainThread]: STDERR: "b''"
[0m14:04:16.381221 [debug] [MainThread]: Acquiring new duckdb connection 'debug'
[0m14:04:16.381926 [debug] [MainThread]: Using duckdb connection "debug"
[0m14:04:16.382263 [debug] [MainThread]: On debug: select 1 as id
[0m14:04:16.382647 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:04:20.039309 [debug] [MainThread]: SQL status: OK in 4 seconds
[0m14:04:20.042251 [debug] [MainThread]: On debug: Close
[0m14:04:20.044784 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110798c10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110798be0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11078c880>]}
[0m14:04:20.045463 [debug] [MainThread]: Flushing usage events
[0m14:04:20.637322 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2023-03-10 14:04:36.070032 | d4fae7ce-3f75-41ad-9392-af864a604811 ==============================
[0m14:04:36.070032 [info ] [MainThread]: Running with dbt=1.4.4
[0m14:04:36.072201 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'project_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'profile': 'local', 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m14:04:36.072605 [debug] [MainThread]: Tracking: tracking
[0m14:04:36.100257 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab67a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab920a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aba36d0>]}
[0m14:04:36.195970 [debug] [MainThread]: Executing "git --help"
[0m14:04:36.209662 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m14:04:36.210272 [debug] [MainThread]: STDERR: "b''"
[0m14:04:36.218804 [debug] [MainThread]: Acquiring new duckdb connection 'debug'
[0m14:04:36.219738 [debug] [MainThread]: Using duckdb connection "debug"
[0m14:04:36.220466 [debug] [MainThread]: On debug: select 1 as id
[0m14:04:36.221545 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:04:36.299853 [debug] [MainThread]: SQL status: OK in 0 seconds
[0m14:04:36.301477 [debug] [MainThread]: On debug: Close
[0m14:04:36.303147 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac79c10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac79ca0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac6eb80>]}
[0m14:04:36.303727 [debug] [MainThread]: Flushing usage events
[0m14:04:36.940379 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2023-03-10 14:04:57.964087 | 05d0f09e-3793-46b6-bb6b-22d97204fd36 ==============================
[0m14:04:57.964087 [info ] [MainThread]: Running with dbt=1.4.4
[0m14:04:57.965410 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'project_dir': '/Users/user/Projects/research/simply/songs_dbt/songs', 'profile': 'local', 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m14:04:57.965610 [debug] [MainThread]: Tracking: tracking
[0m14:04:57.994365 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df1f850>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df47100>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df58610>]}
[0m14:04:58.088869 [debug] [MainThread]: Executing "git --help"
[0m14:04:58.102879 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m14:04:58.103526 [debug] [MainThread]: STDERR: "b''"
[0m14:04:58.112891 [debug] [MainThread]: Acquiring new duckdb connection 'debug'
[0m14:04:58.114253 [debug] [MainThread]: Using duckdb connection "debug"
[0m14:04:58.114948 [debug] [MainThread]: On debug: select 1 as id
[0m14:04:58.115379 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:04:58.196793 [debug] [MainThread]: SQL status: OK in 0 seconds
[0m14:04:58.198575 [debug] [MainThread]: On debug: Close
[0m14:04:58.200472 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e030be0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e030190>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e024a90>]}
[0m14:04:58.201072 [debug] [MainThread]: Flushing usage events
[0m14:04:58.793141 [debug] [MainThread]: Connection 'debug' was properly closed.
